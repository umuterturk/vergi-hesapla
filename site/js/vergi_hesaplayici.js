const DEBUG_MODE = false;
const SHOW_BUY_ME_COFFEE = true;

const YIUFE_DATA = {"202001":462.42,"202002":464.64,"202003":468.69,"202004":474.69,"202005":482.02,"202006":485.37,"202007":490.33,"202008":501.85,"202009":515.13,"202010":533.44,"202011":555.18,"202012":568.27,"202101":583.38,"202102":590.52,"202103":614.93,"202104":641.63,"202105":666.79,"202106":693.54,"202107":710.61,"202108":730.28,"202109":741.58,"202110":780.45,"202111":858.43,"202112":1022.25,"202201":1129.03,"202202":1210.6,"202203":1321.9,"202204":1423.27,"202205":1548.01,"202206":1652.75,"202207":1738.21,"202208":1780.05,"202209":1865.09,"202210":2011.13,"202211":2026.08,"202212":2021.19,"202301":2105.17,"202302":2138.04,"202303":2147.44,"202304":2164.94,"202305":2179.02,"202306":2320.72,"202307":2511.75,"202308":2659.6,"202309":2749.98,"202310":2803.29,"202311":2882.04,"202312":2915.02,"202401":3035.59,"202402":3149.03,"202403":3252.79,"202404":3369.98,"202405":3435.96,"202406":3483.25,"202407":3550.88,"202408":3610.51,"202409":3659.84,"202410":3707.1,"202411":3731.43,"202412":3746.52};

const TCMB_RATES = {"2020-01-01":5.94,"2020-01-02":5.9478,"2020-01-03":5.9627,"2020-01-04":5.9627,"2020-01-05":5.9627,"2020-01-06":5.9658,"2020-01-07":5.9594,"2020-01-08":5.9571,"2020-01-09":5.881,"2020-01-10":5.8713,"2020-01-11":5.8713,"2020-01-12":5.8713,"2020-01-13":5.8529,"2020-01-14":5.8811,"2020-01-15":5.8827,"2020-01-16":5.8684,"2020-01-17":5.8564,"2020-01-18":5.8564,"2020-01-19":5.8564,"2020-01-20":5.8979,"2020-01-21":5.9191,"2020-01-22":5.9293,"2020-01-23":5.9152,"2020-01-24":5.9288,"2020-01-25":5.9288,"2020-01-26":5.9288,"2020-01-27":5.9371,"2020-01-28":5.9334,"2020-01-29":5.9405,"2020-01-30":5.9716,"2020-01-31":5.9726,"2020-02-01":5.9726,"2020-02-02":5.9726,"2020-02-03":5.9755,"2020-02-04":5.9714,"2020-02-05":5.976,"2020-02-06":5.9783,"2020-02-07":5.9776,"2020-02-08":5.9776,"2020-02-09":5.9776,"2020-02-10":5.9951,"2020-02-11":6.0271,"2020-02-12":6.0215,"2020-02-13":6.0459,"2020-02-14":6.047,"2020-02-15":6.047,"2020-02-16":6.047,"2020-02-17":6.0351,"2020-02-18":6.0578,"2020-02-19":6.0581,"2020-02-20":6.0824,"2020-02-21":6.1023,"2020-02-22":6.1023,"2020-02-23":6.1023,"2020-02-24":6.1383,"2020-02-25":6.1218,"2020-02-26":6.1463,"2020-02-27":6.1593,"2020-02-28":6.2259,"2020-02-29":6.2259,"2020-03-01":6.2259,"2020-03-02":6.2192,"2020-03-03":6.1943,"2020-03-04":6.0904,"2020-03-05":6.0772,"2020-03-06":6.0821,"2020-03-07":6.0821,"2020-03-08":6.0821,"2020-03-09":6.1098,"2020-03-10":6.1151,"2020-03-11":6.1502,"2020-03-12":6.2264,"2020-03-13":6.2711,"2020-03-14":6.2711,"2020-03-15":6.2711,"2020-03-16":6.3628,"2020-03-17":6.4528,"2020-03-18":6.4512,"2020-03-19":6.5154,"2020-03-20":6.4839,"2020-03-21":6.4839,"2020-03-22":6.4839,"2020-03-23":6.5864,"2020-03-24":6.4943,"2020-03-25":6.4024,"2020-03-26":6.456,"2020-03-27":6.4346,"2020-03-28":6.4346,"2020-03-29":6.4346,"2020-03-30":6.516,"2020-03-31":6.5696,"2020-04-01":6.6428,"2020-04-02":6.6672,"2020-04-03":6.6903,"2020-04-04":6.6903,"2020-04-05":6.6903,"2020-04-06":6.7549,"2020-04-07":6.7375,"2020-04-08":6.7705,"2020-04-09":6.7382,"2020-04-10":6.6877,"2020-04-11":6.6877,"2020-04-12":6.6877,"2020-04-13":6.7618,"2020-04-14":6.7752,"2020-04-15":6.8505,"2020-04-16":6.9073,"2020-04-17":6.913,"2020-04-18":6.913,"2020-04-19":6.913,"2020-04-20":6.9082,"2020-04-21":6.9593,"2020-04-22":6.9708,"2020-04-23":6.9708,"2020-04-24":6.9589,"2020-04-25":6.9589,"2020-04-26":6.9589,"2020-04-27":6.9675,"2020-04-28":6.9881,"2020-04-29":6.9787,"2020-04-30":6.9719,"2020-05-01":6.9719,"2020-05-02":6.9719,"2020-05-03":6.9719,"2020-05-04":7.0151,"2020-05-05":7.055,"2020-05-06":7.1334,"2020-05-07":7.2209,"2020-05-08":7.096,"2020-05-09":7.096,"2020-05-10":7.096,"2020-05-11":7.0676,"2020-05-12":7.0121,"2020-05-13":6.9789,"2020-05-14":6.9543,"2020-05-15":6.9041,"2020-05-16":6.9041,"2020-05-17":6.9041,"2020-05-18":6.8596,"2020-05-19":6.8596,"2020-05-20":6.7841,"2020-05-21":6.7883,"2020-05-22":6.7917,"2020-05-23":6.7917,"2020-05-24":6.7917,"2020-05-25":6.7917,"2020-05-26":6.7917,"2020-05-27":6.7607,"2020-05-28":6.7894,"2020-05-29":6.8138,"2020-05-30":6.8138,"2020-05-31":6.8138,"2020-06-01":6.8059,"2020-06-02":6.7817,"2020-06-03":6.7308,"2020-06-04":6.7476,"2020-06-05":6.7573,"2020-06-06":6.7573,"2020-06-07":6.7573,"2020-06-08":6.7714,"2020-06-09":6.7828,"2020-06-10":6.7777,"2020-06-11":6.7827,"2020-06-12":6.8142,"2020-06-13":6.8142,"2020-06-14":6.8142,"2020-06-15":6.822,"2020-06-16":6.8254,"2020-06-17":6.8333,"2020-06-18":6.845,"2020-06-19":6.844,"2020-06-20":6.844,"2020-06-21":6.844,"2020-06-22":6.8422,"2020-06-23":6.844,"2020-06-24":6.8452,"2020-06-25":6.8434,"2020-06-26":6.8417,"2020-06-27":6.8417,"2020-06-28":6.8417,"2020-06-29":6.8422,"2020-06-30":6.8432,"2020-07-01":6.8432,"2020-07-02":6.8428,"2020-07-03":6.8422,"2020-07-04":6.8422,"2020-07-05":6.8422,"2020-07-06":6.8467,"2020-07-07":6.8519,"2020-07-08":6.8523,"2020-07-09":6.8523,"2020-07-10":6.8514,"2020-07-11":6.8514,"2020-07-12":6.8514,"2020-07-13":6.8528,"2020-07-14":6.8524,"2020-07-15":6.8524,"2020-07-16":6.845,"2020-07-17":6.8439,"2020-07-18":6.8439,"2020-07-19":6.8439,"2020-07-20":6.8438,"2020-07-21":6.8429,"2020-07-22":6.8372,"2020-07-23":6.8348,"2020-07-24":6.8353,"2020-07-25":6.8353,"2020-07-26":6.8353,"2020-07-27":6.8364,"2020-07-28":6.8364,"2020-07-29":6.9372,"2020-07-30":6.9372,"2020-07-31":6.9372,"2020-08-01":6.9372,"2020-08-02":6.9372,"2020-08-03":6.9372,"2020-08-04":6.9334,"2020-08-05":6.9872,"2020-08-06":7.1593,"2020-08-07":7.2661,"2020-08-08":7.2661,"2020-08-09":7.2661,"2020-08-10":7.2996,"2020-08-11":7.2483,"2020-08-12":7.2865,"2020-08-13":7.3147,"2020-08-14":7.3445,"2020-08-15":7.3445,"2020-08-16":7.3445,"2020-08-17":7.3677,"2020-08-18":7.3679,"2020-08-19":7.3477,"2020-08-20":7.2952,"2020-08-21":7.2156,"2020-08-22":7.2156,"2020-08-23":7.2156,"2020-08-24":7.3372,"2020-08-25":7.3674,"2020-08-26":7.3459,"2020-08-27":7.3174,"2020-08-28":7.305,"2020-08-29":7.305,"2020-08-30":7.305,"2020-08-31":7.3261,"2020-09-01":7.3421,"2020-09-02":7.3563,"2020-09-03":7.3994,"2020-09-04":7.4133,"2020-09-05":7.4133,"2020-09-06":7.4133,"2020-09-07":7.4349,"2020-09-08":7.4537,"2020-09-09":7.467,"2020-09-10":7.4553,"2020-09-11":7.4396,"2020-09-12":7.4396,"2020-09-13":7.4396,"2020-09-14":7.4689,"2020-09-15":7.4668,"2020-09-16":7.4678,"2020-09-17":7.5152,"2020-09-18":7.5344,"2020-09-19":7.5344,"2020-09-20":7.5344,"2020-09-21":7.572,"2020-09-22":7.6251,"2020-09-23":7.657,"2020-09-24":7.663,"2020-09-25":7.5546,"2020-09-26":7.5546,"2020-09-27":7.5546,"2020-09-28":7.7507,"2020-09-29":7.808,"2020-09-30":7.7522,"2020-10-01":7.6946,"2020-10-02":7.7288,"2020-10-03":7.7288,"2020-10-04":7.7288,"2020-10-05":7.7307,"2020-10-06":7.7452,"2020-10-07":7.8267,"2020-10-08":7.8931,"2020-10-09":7.9072,"2020-10-10":7.9072,"2020-10-11":7.9072,"2020-10-12":7.8673,"2020-10-13":7.8778,"2020-10-14":7.9205,"2020-10-15":7.9116,"2020-10-16":7.9129,"2020-10-17":7.9129,"2020-10-18":7.9129,"2020-10-19":7.8778,"2020-10-20":7.8761,"2020-10-21":7.8179,"2020-10-22":7.8025,"2020-10-23":7.9379,"2020-10-24":7.9379,"2020-10-25":7.9379,"2020-10-26":8.0285,"2020-10-27":8.1211,"2020-10-28":8.1211,"2020-10-29":8.1211,"2020-10-30":8.3082,"2020-10-31":8.3082,"2020-11-01":8.3082,"2020-11-02":8.376,"2020-11-03":8.4546,"2020-11-04":8.4553,"2020-11-05":8.4417,"2020-11-06":8.4613,"2020-11-07":8.4613,"2020-11-08":8.4613,"2020-11-09":8.1778,"2020-11-10":8.2358,"2020-11-11":8.0477,"2020-11-12":7.7896,"2020-11-13":7.6297,"2020-11-14":7.6297,"2020-11-15":7.6297,"2020-11-16":7.6751,"2020-11-17":7.7393,"2020-11-18":7.7195,"2020-11-19":7.6699,"2020-11-20":7.5785,"2020-11-21":7.5785,"2020-11-22":7.5785,"2020-11-23":7.7593,"2020-11-24":7.917,"2020-11-25":7.9415,"2020-11-26":7.8945,"2020-11-27":7.7975,"2020-11-28":7.7975,"2020-11-29":7.7975,"2020-11-30":7.7892,"2020-12-01":7.8412,"2020-12-02":7.808,"2020-12-03":7.8472,"2020-12-04":7.7796,"2020-12-05":7.7796,"2020-12-06":7.7796,"2020-12-07":7.8373,"2020-12-08":7.8087,"2020-12-09":7.8203,"2020-12-10":7.8499,"2020-12-11":7.9349,"2020-12-12":7.9349,"2020-12-13":7.9349,"2020-12-14":7.8699,"2020-12-15":7.8331,"2020-12-16":7.7873,"2020-12-17":7.751,"2020-12-18":7.6898,"2020-12-19":7.6898,"2020-12-20":7.6898,"2020-12-21":7.6769,"2020-12-22":7.6368,"2020-12-23":7.6321,"2020-12-24":7.619,"2020-12-25":7.5517,"2020-12-26":7.5517,"2020-12-27":7.5517,"2020-12-28":7.4738,"2020-12-29":7.4063,"2020-12-30":7.3405,"2020-12-31":7.4194,"2021-01-01":7.4194,"2021-01-02":7.4194,"2021-01-03":7.4194,"2021-01-04":7.3602,"2021-01-05":7.3866,"2021-01-06":7.33,"2021-01-07":7.2733,"2021-01-08":7.349,"2021-01-09":7.349,"2021-01-10":7.349,"2021-01-11":7.4431,"2021-01-12":7.4608,"2021-01-13":7.4285,"2021-01-14":7.3885,"2021-01-15":7.3877,"2021-01-16":7.3877,"2021-01-17":7.3877,"2021-01-18":7.4952,"2021-01-19":7.4485,"2021-01-20":7.4367,"2021-01-21":7.3836,"2021-01-22":7.3985,"2021-01-23":7.3985,"2021-01-24":7.3985,"2021-01-25":7.3797,"2021-01-26":7.3835,"2021-01-27":7.3544,"2021-01-28":7.3723,"2021-01-29":7.3216,"2021-01-30":7.3216,"2021-01-31":7.3216,"2021-02-01":7.2185,"2021-02-02":7.1372,"2021-02-03":7.1498,"2021-02-04":7.1324,"2021-02-05":7.0789,"2021-02-06":7.0789,"2021-02-07":7.0789,"2021-02-08":7.0663,"2021-02-09":7.0821,"2021-02-10":7.0513,"2021-02-11":7.0404,"2021-02-12":7.0162,"2021-02-13":7.0162,"2021-02-14":7.0162,"2021-02-15":6.9724,"2021-02-16":6.915,"2021-02-17":7.004,"2021-02-18":6.9527,"2021-02-19":6.9611,"2021-02-20":6.9611,"2021-02-21":6.9611,"2021-02-22":6.994,"2021-02-23":7.0253,"2021-02-24":7.1357,"2021-02-25":7.1924,"2021-02-26":7.3708,"2021-02-27":7.3708,"2021-02-28":7.3708,"2021-03-01":7.3029,"2021-03-02":7.3117,"2021-03-03":7.3391,"2021-03-04":7.4524,"2021-03-05":7.5096,"2021-03-06":7.5096,"2021-03-07":7.5096,"2021-03-08":7.5939,"2021-03-09":7.6403,"2021-03-10":7.5952,"2021-03-11":7.4446,"2021-03-12":7.5709,"2021-03-13":7.5709,"2021-03-14":7.5709,"2021-03-15":7.5374,"2021-03-16":7.5041,"2021-03-17":7.498,"2021-03-18":7.4573,"2021-03-19":7.267,"2021-03-20":7.267,"2021-03-21":7.267,"2021-03-22":7.904,"2021-03-23":7.8082,"2021-03-24":7.9666,"2021-03-25":7.9409,"2021-03-26":7.9893,"2021-03-27":7.9893,"2021-03-28":7.9893,"2021-03-29":8.1192,"2021-03-30":8.326,"2021-03-31":8.3258,"2021-04-01":8.1707,"2021-04-02":8.0362,"2021-04-03":8.0362,"2021-04-04":8.0362,"2021-04-05":8.1394,"2021-04-06":8.1441,"2021-04-07":8.1688,"2021-04-08":8.1518,"2021-04-09":8.1383,"2021-04-10":8.1383,"2021-04-11":8.1383,"2021-04-12":8.1681,"2021-04-13":8.1383,"2021-04-14":8.0729,"2021-04-15":8.0567,"2021-04-16":8.0574,"2021-04-17":8.0574,"2021-04-18":8.0574,"2021-04-19":8.0514,"2021-04-20":8.1011,"2021-04-21":8.1433,"2021-04-22":8.2694,"2021-04-23":8.2694,"2021-04-24":8.2694,"2021-04-25":8.2694,"2021-04-26":8.3295,"2021-04-27":8.231,"2021-04-28":8.186,"2021-04-29":8.1753,"2021-04-30":8.2311,"2021-05-01":8.2311,"2021-05-02":8.2311,"2021-05-03":8.292,"2021-05-04":8.3091,"2021-05-05":8.34,"2021-05-06":8.3062,"2021-05-07":8.273,"2021-05-08":8.273,"2021-05-09":8.273,"2021-05-10":8.2457,"2021-05-11":8.2867,"2021-05-12":8.2867,"2021-05-13":8.2867,"2021-05-14":8.2867,"2021-05-15":8.2867,"2021-05-16":8.2867,"2021-05-17":8.3469,"2021-05-18":8.3281,"2021-05-19":8.3281,"2021-05-20":8.3689,"2021-05-21":8.3554,"2021-05-22":8.3554,"2021-05-23":8.3554,"2021-05-24":8.3811,"2021-05-25":8.3947,"2021-05-26":8.433,"2021-05-27":8.4323,"2021-05-28":8.5496,"2021-05-29":8.5496,"2021-05-30":8.5496,"2021-05-31":8.499,"2021-06-01":8.5032,"2021-06-02":8.6066,"2021-06-03":8.6231,"2021-06-04":8.682,"2021-06-05":8.682,"2021-06-06":8.682,"2021-06-07":8.6201,"2021-06-08":8.5891,"2021-06-09":8.575,"2021-06-10":8.5313,"2021-06-11":8.3547,"2021-06-12":8.3547,"2021-06-13":8.3547,"2021-06-14":8.3374,"2021-06-15":8.5474,"2021-06-16":8.5218,"2021-06-17":8.6243,"2021-06-18":8.6646,"2021-06-19":8.6646,"2021-06-20":8.6646,"2021-06-21":8.7497,"2021-06-22":8.7202,"2021-06-23":8.6139,"2021-06-24":8.6593,"2021-06-25":8.6772,"2021-06-26":8.6772,"2021-06-27":8.6772,"2021-06-28":8.7219,"2021-06-29":8.7052,"2021-06-30":8.6803,"2021-07-01":8.6768,"2021-07-02":8.6797,"2021-07-03":8.6797,"2021-07-04":8.6797,"2021-07-05":8.665,"2021-07-06":8.6515,"2021-07-07":8.6657,"2021-07-08":8.6867,"2021-07-09":8.6715,"2021-07-10":8.6715,"2021-07-11":8.6715,"2021-07-12":8.6319,"2021-07-13":8.6033,"2021-07-14":8.6123,"2021-07-15":8.6123,"2021-07-16":8.5099,"2021-07-17":8.5099,"2021-07-18":8.5099,"2021-07-19":8.5099,"2021-07-20":8.5099,"2021-07-21":8.5099,"2021-07-22":8.5099,"2021-07-23":8.5099,"2021-07-24":8.5099,"2021-07-25":8.5099,"2021-07-26":8.573,"2021-07-27":8.5604,"2021-07-28":8.5446,"2021-07-29":8.4975,"2021-07-30":8.4139,"2021-07-31":8.4139,"2021-08-01":8.4139,"2021-08-02":8.385,"2021-08-03":8.3229,"2021-08-04":8.4193,"2021-08-05":8.5262,"2021-08-06":8.5619,"2021-08-07":8.5619,"2021-08-08":8.5619,"2021-08-09":8.6426,"2021-08-10":8.6205,"2021-08-11":8.6244,"2021-08-12":8.5723,"2021-08-13":8.5359,"2021-08-14":8.5359,"2021-08-15":8.5359,"2021-08-16":8.4681,"2021-08-17":8.4141,"2021-08-18":8.4632,"2021-08-19":8.5111,"2021-08-20":8.5254,"2021-08-21":8.5254,"2021-08-22":8.5254,"2021-08-23":8.4572,"2021-08-24":8.4132,"2021-08-25":8.3797,"2021-08-26":8.3578,"2021-08-27":8.3753,"2021-08-28":8.3753,"2021-08-29":8.3753,"2021-08-30":8.3753,"2021-08-31":8.3043,"2021-09-01":8.2876,"2021-09-02":8.2633,"2021-09-03":8.295,"2021-09-04":8.295,"2021-09-05":8.295,"2021-09-06":8.2767,"2021-09-07":8.2981,"2021-09-08":8.4063,"2021-09-09":8.4655,"2021-09-10":8.4044,"2021-09-11":8.4044,"2021-09-12":8.4044,"2021-09-13":8.4441,"2021-09-14":8.4314,"2021-09-15":8.4272,"2021-09-16":8.4402,"2021-09-17":8.5678,"2021-09-18":8.5678,"2021-09-19":8.5678,"2021-09-20":8.6648,"2021-09-21":8.6301,"2021-09-22":8.6349,"2021-09-23":8.6584,"2021-09-24":8.824,"2021-09-25":8.824,"2021-09-26":8.824,"2021-09-27":8.8355,"2021-09-28":8.8585,"2021-09-29":8.8433,"2021-09-30":8.8785,"2021-10-01":8.8469,"2021-10-02":8.8469,"2021-10-03":8.8469,"2021-10-04":8.8522,"2021-10-05":8.8444,"2021-10-06":8.9065,"2021-10-07":8.8609,"2021-10-08":8.8982,"2021-10-09":8.8982,"2021-10-10":8.8982,"2021-10-11":8.9367,"2021-10-12":8.9996,"2021-10-13":9.0222,"2021-10-14":9.1416,"2021-10-15":9.1993,"2021-10-16":9.1993,"2021-10-17":9.1993,"2021-10-18":9.2667,"2021-10-19":9.2845,"2021-10-20":9.314,"2021-10-21":9.2857,"2021-10-22":9.586,"2021-10-23":9.586,"2021-10-24":9.586,"2021-10-25":9.7362,"2021-10-26":9.4575,"2021-10-27":9.4813,"2021-10-28":9.4813,"2021-10-29":9.4813,"2021-10-30":9.4813,"2021-10-31":9.4813,"2021-11-01":9.5287,"2021-11-02":9.5171,"2021-11-03":9.657,"2021-11-04":9.6884,"2021-11-05":9.7,"2021-11-06":9.7,"2021-11-07":9.7,"2021-11-08":9.6848,"2021-11-09":9.7029,"2021-11-10":9.7812,"2021-11-11":9.917,"2021-11-12":9.9105,"2021-11-13":9.9105,"2021-11-14":9.9105,"2021-11-15":9.9804,"2021-11-16":10.1671,"2021-11-17":10.3993,"2021-11-18":10.6963,"2021-11-19":11.0266,"2021-11-20":11.0266,"2021-11-21":11.0266,"2021-11-22":11.1712,"2021-11-23":12.1556,"2021-11-24":12.6082,"2021-11-25":12.0001,"2021-11-26":12.0786,"2021-11-27":12.0786,"2021-11-28":12.0786,"2021-11-29":12.6595,"2021-11-30":12.9387,"2021-12-01":13.3363,"2021-12-02":13.4067,"2021-12-03":13.6801,"2021-12-04":13.6801,"2021-12-05":13.6801,"2021-12-06":13.774,"2021-12-07":13.6667,"2021-12-08":13.6241,"2021-12-09":13.7432,"2021-12-10":13.8346,"2021-12-11":13.8346,"2021-12-12":13.8346,"2021-12-13":14.2465,"2021-12-14":14.1745,"2021-12-15":14.635,"2021-12-16":15.2118,"2021-12-17":16.3358,"2021-12-18":16.3358,"2021-12-19":16.3358,"2021-12-20":17.4731,"2021-12-21":13.0226,"2021-12-22":12.4535,"2021-12-23":11.4508,"2021-12-24":11.7278,"2021-12-25":11.7278,"2021-12-26":11.7278,"2021-12-27":11.39,"2021-12-28":11.8302,"2021-12-29":12.2219,"2021-12-30":12.9775,"2021-12-31":13.329,"2022-01-01":13.329,"2022-01-02":13.329,"2022-01-03":13.4221,"2022-01-04":13.1873,"2022-01-05":13.3687,"2022-01-06":13.6352,"2022-01-07":13.7526,"2022-01-08":13.7526,"2022-01-09":13.7526,"2022-01-10":13.7195,"2022-01-11":13.7314,"2022-01-12":13.7209,"2022-01-13":13.54,"2022-01-14":13.5054,"2022-01-15":13.5054,"2022-01-16":13.5054,"2022-01-17":13.4788,"2022-01-18":13.5109,"2022-01-19":13.5703,"2022-01-20":13.4431,"2022-01-21":13.402,"2022-01-22":13.402,"2022-01-23":13.402,"2022-01-24":13.3846,"2022-01-25":13.5,"2022-01-26":13.5029,"2022-01-27":13.5932,"2022-01-28":13.6066,"2022-01-29":13.6066,"2022-01-30":13.6066,"2022-01-31":13.4015,"2022-02-01":13.367,"2022-02-02":13.4287,"2022-02-03":13.5543,"2022-02-04":13.5336,"2022-02-05":13.5336,"2022-02-06":13.5336,"2022-02-07":13.5429,"2022-02-08":13.616,"2022-02-09":13.5675,"2022-02-10":13.5322,"2022-02-11":13.4933,"2022-02-12":13.4933,"2022-02-13":13.4933,"2022-02-14":13.5378,"2022-02-15":13.6032,"2022-02-16":13.6154,"2022-02-17":13.6035,"2022-02-18":13.6118,"2022-02-19":13.6118,"2022-02-20":13.6118,"2022-02-21":13.6123,"2022-02-22":13.7447,"2022-02-23":13.7849,"2022-02-24":14.2324,"2022-02-25":14.0395,"2022-02-26":14.0395,"2022-02-27":14.0395,"2022-02-28":13.8286,"2022-03-01":13.8854,"2022-03-02":14.0386,"2022-03-03":14.112,"2022-03-04":14.1766,"2022-03-05":14.1766,"2022-03-06":14.1766,"2022-03-07":14.3012,"2022-03-08":14.4728,"2022-03-09":14.6061,"2022-03-10":14.7435,"2022-03-11":14.9042,"2022-03-12":14.9042,"2022-03-13":14.9042,"2022-03-14":14.7624,"2022-03-15":14.7503,"2022-03-16":14.6758,"2022-03-17":14.6697,"2022-03-18":14.764,"2022-03-19":14.764,"2022-03-20":14.764,"2022-03-21":14.816,"2022-03-22":14.8041,"2022-03-23":14.8063,"2022-03-24":14.8234,"2022-03-25":14.8068,"2022-03-26":14.8068,"2022-03-27":14.8068,"2022-03-28":14.8221,"2022-03-29":14.7933,"2022-03-30":14.6458,"2022-03-31":14.6371,"2022-04-01":14.6609,"2022-04-02":14.6609,"2022-04-03":14.6609,"2022-04-04":14.6862,"2022-04-05":14.6955,"2022-04-06":14.7176,"2022-04-07":14.7289,"2022-04-08":14.7213,"2022-04-09":14.7213,"2022-04-10":14.7213,"2022-04-11":14.7162,"2022-04-12":14.6633,"2022-04-13":14.5604,"2022-04-14":14.5933,"2022-04-15":14.6181,"2022-04-16":14.6181,"2022-04-17":14.6181,"2022-04-18":14.6252,"2022-04-19":14.6343,"2022-04-20":14.6424,"2022-04-21":14.6605,"2022-04-22":14.7068,"2022-04-23":14.7068,"2022-04-24":14.7068,"2022-04-25":14.7439,"2022-04-26":14.767,"2022-04-27":14.7962,"2022-04-28":14.7798,"2022-04-29":14.7852,"2022-04-30":14.7852,"2022-05-01":14.7852,"2022-05-02":14.7852,"2022-05-03":14.7852,"2022-05-04":14.7852,"2022-05-05":14.8313,"2022-05-06":14.8978,"2022-05-07":14.8978,"2022-05-08":14.8978,"2022-05-09":14.974,"2022-05-10":15.1926,"2022-05-11":15.2882,"2022-05-12":15.3526,"2022-05-13":15.4378,"2022-05-14":15.4378,"2022-05-15":15.4378,"2022-05-16":15.5639,"2022-05-17":15.7886,"2022-05-18":15.9205,"2022-05-19":15.9205,"2022-05-20":15.9249,"2022-05-21":15.9249,"2022-05-22":15.9249,"2022-05-23":15.8494,"2022-05-24":16.0846,"2022-05-25":16.267,"2022-05-26":16.3681,"2022-05-27":16.3479,"2022-05-28":16.3479,"2022-05-29":16.3479,"2022-05-30":16.3562,"2022-05-31":16.3876,"2022-06-01":16.4127,"2022-06-02":16.439,"2022-06-03":16.4765,"2022-06-04":16.4765,"2022-06-05":16.4765,"2022-06-06":16.5588,"2022-06-07":16.7084,"2022-06-08":17.0925,"2022-06-09":17.1985,"2022-06-10":17.0589,"2022-06-11":17.0589,"2022-06-12":17.0589,"2022-06-13":17.2344,"2022-06-14":17.2343,"2022-06-15":17.2568,"2022-06-16":17.288,"2022-06-17":17.2905,"2022-06-18":17.2905,"2022-06-19":17.2905,"2022-06-20":17.3113,"2022-06-21":17.3168,"2022-06-22":17.3301,"2022-06-23":17.347,"2022-06-24":17.3478,"2022-06-25":17.3478,"2022-06-26":17.3478,"2022-06-27":16.646,"2022-06-28":16.6189,"2022-06-29":16.669,"2022-06-30":16.6614,"2022-07-01":16.7155,"2022-07-02":16.7155,"2022-07-03":16.7155,"2022-07-04":16.7935,"2022-07-05":16.9369,"2022-07-06":17.1818,"2022-07-07":17.2601,"2022-07-08":17.2601,"2022-07-09":17.2601,"2022-07-10":17.2601,"2022-07-11":17.2601,"2022-07-12":17.2601,"2022-07-13":17.3913,"2022-07-14":17.4581,"2022-07-15":17.4581,"2022-07-16":17.4581,"2022-07-17":17.4581,"2022-07-18":17.4635,"2022-07-19":17.5425,"2022-07-20":17.5605,"2022-07-21":17.6282,"2022-07-22":17.711,"2022-07-23":17.711,"2022-07-24":17.711,"2022-07-25":17.8011,"2022-07-26":17.8335,"2022-07-27":17.8701,"2022-07-28":17.9044,"2022-07-29":17.8939,"2022-07-30":17.8939,"2022-07-31":17.8939,"2022-08-01":17.9254,"2022-08-02":17.9327,"2022-08-03":17.9358,"2022-08-04":17.935,"2022-08-05":17.9362,"2022-08-06":17.9362,"2022-08-07":17.9362,"2022-08-08":17.9393,"2022-08-09":17.9319,"2022-08-10":17.9308,"2022-08-11":17.9356,"2022-08-12":17.9366,"2022-08-13":17.9366,"2022-08-14":17.9366,"2022-08-15":17.9411,"2022-08-16":17.942,"2022-08-17":17.9411,"2022-08-18":17.9688,"2022-08-19":18.0767,"2022-08-20":18.0767,"2022-08-21":18.0767,"2022-08-22":18.0988,"2022-08-23":18.1018,"2022-08-24":18.1176,"2022-08-25":18.1466,"2022-08-26":18.1564,"2022-08-27":18.1564,"2022-08-28":18.1564,"2022-08-29":18.1648,"2022-08-30":18.1648,"2022-08-31":18.1704,"2022-09-01":18.1805,"2022-09-02":18.2009,"2022-09-03":18.2009,"2022-09-04":18.2009,"2022-09-05":18.205,"2022-09-06":18.2048,"2022-09-07":18.214,"2022-09-08":18.2195,"2022-09-09":18.2189,"2022-09-10":18.2189,"2022-09-11":18.2189,"2022-09-12":18.2187,"2022-09-13":18.2205,"2022-09-14":18.2321,"2022-09-15":18.2427,"2022-09-16":18.2474,"2022-09-17":18.2474,"2022-09-18":18.2474,"2022-09-19":18.2658,"2022-09-20":18.2786,"2022-09-21":18.2949,"2022-09-22":18.3401,"2022-09-23":18.3702,"2022-09-24":18.3702,"2022-09-25":18.3702,"2022-09-26":18.4266,"2022-09-27":18.4509,"2022-09-28":18.4862,"2022-09-29":18.5038,"2022-09-30":18.5187,"2022-10-01":18.5187,"2022-10-02":18.5187,"2022-10-03":18.5397,"2022-10-04":18.5447,"2022-10-05":18.555,"2022-10-06":18.5589,"2022-10-07":18.5592,"2022-10-08":18.5592,"2022-10-09":18.5592,"2022-10-10":18.5581,"2022-10-11":18.5615,"2022-10-12":18.5664,"2022-10-13":18.5656,"2022-10-14":18.5596,"2022-10-15":18.5596,"2022-10-16":18.5596,"2022-10-17":18.5663,"2022-10-18":18.5663,"2022-10-19":18.5661,"2022-10-20":18.5687,"2022-10-21":18.5741,"2022-10-22":18.5741,"2022-10-23":18.5741,"2022-10-24":18.583,"2022-10-25":18.5825,"2022-10-26":18.5865,"2022-10-27":18.588,"2022-10-28":18.588,"2022-10-29":18.588,"2022-10-30":18.588,"2022-10-31":18.5915,"2022-11-01":18.5956,"2022-11-02":18.5981,"2022-11-03":18.5972,"2022-11-04":18.5936,"2022-11-05":18.5936,"2022-11-06":18.5936,"2022-11-07":18.5833,"2022-11-08":18.5803,"2022-11-09":18.5791,"2022-11-10":18.5793,"2022-11-11":18.5115,"2022-11-12":18.5115,"2022-11-13":18.5115,"2022-11-14":18.5819,"2022-11-15":18.5864,"2022-11-16":18.5916,"2022-11-17":18.5959,"2022-11-18":18.5945,"2022-11-19":18.5945,"2022-11-20":18.5945,"2022-11-21":18.5979,"2022-11-22":18.6033,"2022-11-23":18.6062,"2022-11-24":18.6045,"2022-11-25":18.6071,"2022-11-26":18.6071,"2022-11-27":18.6071,"2022-11-28":18.6069,"2022-11-29":18.614,"2022-11-30":18.6194,"2022-12-01":18.6123,"2022-12-02":18.6103,"2022-12-03":18.6103,"2022-12-04":18.6103,"2022-12-05":18.613,"2022-12-06":18.6143,"2022-12-07":18.6166,"2022-12-08":18.6202,"2022-12-09":18.6208,"2022-12-10":18.6208,"2022-12-11":18.6208,"2022-12-12":18.6199,"2022-12-13":18.6246,"2022-12-14":18.6266,"2022-12-15":18.6254,"2022-12-16":18.6268,"2022-12-17":18.6268,"2022-12-18":18.6268,"2022-12-19":18.6312,"2022-12-20":18.6381,"2022-12-21":18.6432,"2022-12-22":18.6522,"2022-12-23":18.6592,"2022-12-24":18.6592,"2022-12-25":18.6592,"2022-12-26":18.6649,"2022-12-27":18.6813,"2022-12-28":18.6964,"2022-12-29":18.6966,"2022-12-30":18.6983,"2022-12-31":18.6983,"2023-01-01":18.6983,"2023-01-02":18.7029,"2023-01-03":18.7105,"2023-01-04":18.7194,"2023-01-05":18.7387,"2023-01-06":18.7498,"2023-01-07":18.7498,"2023-01-08":18.7498,"2023-01-09":18.7538,"2023-01-10":18.7555,"2023-01-11":18.7581,"2023-01-12":18.7608,"2023-01-13":18.7592,"2023-01-14":18.7592,"2023-01-15":18.7592,"2023-01-16":18.7681,"2023-01-17":18.7691,"2023-01-18":18.7701,"2023-01-19":18.7742,"2023-01-20":18.7771,"2023-01-21":18.7771,"2023-01-22":18.7771,"2023-01-23":18.7844,"2023-01-24":18.7735,"2023-01-25":18.785,"2023-01-26":18.7853,"2023-01-27":18.7852,"2023-01-28":18.7852,"2023-01-29":18.7852,"2023-01-30":18.7876,"2023-01-31":18.7878,"2023-02-01":18.7897,"2023-02-02":18.7913,"2023-02-03":18.7948,"2023-02-04":18.7948,"2023-02-05":18.7948,"2023-02-06":18.8092,"2023-02-07":18.8087,"2023-02-08":18.81,"2023-02-09":18.8109,"2023-02-10":18.8112,"2023-02-11":18.8112,"2023-02-12":18.8112,"2023-02-13":18.8184,"2023-02-14":18.8225,"2023-02-15":18.8282,"2023-02-16":18.832,"2023-02-17":18.836,"2023-02-18":18.836,"2023-02-19":18.836,"2023-02-20":18.8438,"2023-02-21":18.8464,"2023-02-22":18.8506,"2023-02-23":18.8548,"2023-02-24":18.8567,"2023-02-25":18.8567,"2023-02-26":18.8567,"2023-02-27":18.8632,"2023-02-28":18.8647,"2023-03-01":18.8652,"2023-03-02":18.867,"2023-03-03":18.8587,"2023-03-04":18.8587,"2023-03-05":18.8587,"2023-03-06":18.8801,"2023-03-07":18.8907,"2023-03-08":18.9135,"2023-03-09":18.9295,"2023-03-10":18.9374,"2023-03-11":18.9374,"2023-03-12":18.9374,"2023-03-13":18.9494,"2023-03-14":18.9514,"2023-03-15":18.9583,"2023-03-16":18.9756,"2023-03-17":18.9756,"2023-03-18":18.9756,"2023-03-19":18.9756,"2023-03-20":18.9919,"2023-03-21":19.0014,"2023-03-22":19.0165,"2023-03-23":19.0223,"2023-03-24":19.0371,"2023-03-25":19.0371,"2023-03-26":19.0371,"2023-03-27":19.068,"2023-03-28":19.0839,"2023-03-29":19.107,"2023-03-30":19.146,"2023-03-31":19.1532,"2023-04-01":19.1532,"2023-04-02":19.1532,"2023-04-03":19.1788,"2023-04-04":19.2001,"2023-04-05":19.2266,"2023-04-06":19.2361,"2023-04-07":19.2332,"2023-04-08":19.2332,"2023-04-09":19.2332,"2023-04-10":19.238,"2023-04-11":19.2619,"2023-04-12":19.2885,"2023-04-13":19.307,"2023-04-14":19.3363,"2023-04-15":19.3363,"2023-04-16":19.3363,"2023-04-17":19.3542,"2023-04-18":19.3755,"2023-04-19":19.3806,"2023-04-20":19.3806,"2023-04-21":19.3806,"2023-04-22":19.3806,"2023-04-23":19.3806,"2023-04-24":19.3853,"2023-04-25":19.3937,"2023-04-26":19.4029,"2023-04-27":19.4103,"2023-04-28":19.4268,"2023-04-29":19.4268,"2023-04-30":19.4268,"2023-05-01":19.4268,"2023-05-02":19.4417,"2023-05-03":19.4511,"2023-05-04":19.4647,"2023-05-05":19.4747,"2023-05-06":19.4747,"2023-05-07":19.4747,"2023-05-08":19.4837,"2023-05-09":19.4909,"2023-05-10":19.5134,"2023-05-11":19.5389,"2023-05-12":19.5649,"2023-05-13":19.5649,"2023-05-14":19.5649,"2023-05-15":19.6386,"2023-05-16":19.68,"2023-05-17":19.7336,"2023-05-18":19.7607,"2023-05-19":19.7607,"2023-05-20":19.7607,"2023-05-21":19.7607,"2023-05-22":19.8047,"2023-05-23":19.827,"2023-05-24":19.86,"2023-05-25":19.9027,"2023-05-26":19.9512,"2023-05-27":19.9512,"2023-05-28":19.9512,"2023-05-29":20.0453,"2023-05-30":20.3104,"2023-05-31":20.6632,"2023-06-01":20.7529,"2023-06-02":20.8447,"2023-06-03":20.8447,"2023-06-04":20.8447,"2023-06-05":21.1465,"2023-06-06":21.4565,"2023-06-07":23.021,"2023-06-08":23.3212,"2023-06-09":23.4314,"2023-06-10":23.4314,"2023-06-11":23.4314,"2023-06-12":23.6117,"2023-06-13":23.6387,"2023-06-14":23.5989,"2023-06-15":23.6389,"2023-06-16":23.6388,"2023-06-17":23.6388,"2023-06-18":23.6388,"2023-06-19":23.6371,"2023-06-20":23.577,"2023-06-21":23.5493,"2023-06-22":23.6239,"2023-06-23":25.2505,"2023-06-24":25.2505,"2023-06-25":25.2505,"2023-06-26":25.8231,"2023-06-27":25.8231,"2023-06-28":25.8231,"2023-06-29":25.8231,"2023-06-30":25.8231,"2023-07-01":25.8231,"2023-07-02":25.8231,"2023-07-03":26.0312,"2023-07-04":26.0035,"2023-07-05":26.0474,"2023-07-06":26.0452,"2023-07-07":26.0381,"2023-07-08":26.0381,"2023-07-09":26.0381,"2023-07-10":26.0564,"2023-07-11":26.0721,"2023-07-12":26.1099,"2023-07-13":26.1195,"2023-07-14":26.1446,"2023-07-15":26.1446,"2023-07-16":26.1446,"2023-07-17":26.2388,"2023-07-18":26.8232,"2023-07-19":26.8963,"2023-07-20":26.8878,"2023-07-21":26.8944,"2023-07-22":26.8944,"2023-07-23":26.8944,"2023-07-24":26.9212,"2023-07-25":26.9263,"2023-07-26":26.9283,"2023-07-27":26.9308,"2023-07-28":26.9394,"2023-07-29":26.9394,"2023-07-30":26.9394,"2023-07-31":26.9323,"2023-08-01":26.9329,"2023-08-02":26.9382,"2023-08-03":26.9498,"2023-08-04":26.9545,"2023-08-05":26.9545,"2023-08-06":26.9545,"2023-08-07":26.9651,"2023-08-08":26.982,"2023-08-09":26.9892,"2023-08-10":26.9978,"2023-08-11":27.0059,"2023-08-12":27.0059,"2023-08-13":27.0059,"2023-08-14":27.017,"2023-08-15":27.022,"2023-08-16":27.0254,"2023-08-17":27.0681,"2023-08-18":27.0606,"2023-08-19":27.0606,"2023-08-20":27.0606,"2023-08-21":27.1275,"2023-08-22":27.1676,"2023-08-23":27.1737,"2023-08-24":27.0937,"2023-08-25":26.406,"2023-08-26":26.406,"2023-08-27":26.406,"2023-08-28":26.5271,"2023-08-29":26.5763,"2023-08-30":26.5763,"2023-08-31":26.6658,"2023-09-01":26.6783,"2023-09-02":26.6783,"2023-09-03":26.6783,"2023-09-04":26.735,"2023-09-05":26.7605,"2023-09-06":26.7701,"2023-09-07":26.8048,"2023-09-08":26.8087,"2023-09-09":26.8087,"2023-09-10":26.8087,"2023-09-11":26.8414,"2023-09-12":26.8582,"2023-09-13":26.9024,"2023-09-14":26.9069,"2023-09-15":26.93,"2023-09-16":26.93,"2023-09-17":26.93,"2023-09-18":26.9814,"2023-09-19":26.9938,"2023-09-20":26.991,"2023-09-21":27.002,"2023-09-22":27.1039,"2023-09-23":27.1039,"2023-09-24":27.1039,"2023-09-25":27.1751,"2023-09-26":27.2108,"2023-09-27":27.264,"2023-09-28":27.3752,"2023-09-29":27.3767,"2023-09-30":27.3767,"2023-10-01":27.3767,"2023-10-02":27.4044,"2023-10-03":27.4518,"2023-10-04":27.5316,"2023-10-05":27.5264,"2023-10-06":27.558,"2023-10-07":27.558,"2023-10-08":27.558,"2023-10-09":27.6559,"2023-10-10":27.6791,"2023-10-11":27.6894,"2023-10-12":27.7077,"2023-10-13":27.7439,"2023-10-14":27.7439,"2023-10-15":27.7439,"2023-10-16":27.8364,"2023-10-17":27.8719,"2023-10-18":27.9659,"2023-10-19":27.9649,"2023-10-20":27.9714,"2023-10-21":27.9714,"2023-10-22":27.9714,"2023-10-23":28.0103,"2023-10-24":28.0536,"2023-10-25":28.0807,"2023-10-26":28.1026,"2023-10-27":28.1258,"2023-10-28":28.1258,"2023-10-29":28.1258,"2023-10-30":28.2043,"2023-10-31":28.2366,"2023-11-01":28.2806,"2023-11-02":28.3063,"2023-11-03":28.3479,"2023-11-04":28.3479,"2023-11-05":28.3479,"2023-11-06":28.3884,"2023-11-07":28.4353,"2023-11-08":28.4767,"2023-11-09":28.4759,"2023-11-10":28.4857,"2023-11-11":28.4857,"2023-11-12":28.4857,"2023-11-13":28.542,"2023-11-14":28.5826,"2023-11-15":28.6163,"2023-11-16":28.6529,"2023-11-17":28.6592,"2023-11-18":28.6592,"2023-11-19":28.6592,"2023-11-20":28.7051,"2023-11-21":28.7474,"2023-11-22":28.7618,"2023-11-23":28.7786,"2023-11-24":28.8088,"2023-11-25":28.8088,"2023-11-26":28.8088,"2023-11-27":28.8584,"2023-11-28":28.8768,"2023-11-29":28.8596,"2023-11-30":28.8596,"2023-12-01":28.8553,"2023-12-02":28.8553,"2023-12-03":28.8553,"2023-12-04":28.8515,"2023-12-05":28.8705,"2023-12-06":28.8793,"2023-12-07":28.874,"2023-12-08":28.8974,"2023-12-09":28.8974,"2023-12-10":28.8974,"2023-12-11":28.9396,"2023-12-12":28.9773,"2023-12-13":29.0056,"2023-12-14":28.9805,"2023-12-15":28.9847,"2023-12-16":28.9847,"2023-12-17":28.9847,"2023-12-18":29.0053,"2023-12-19":29.0299,"2023-12-20":29.0677,"2023-12-21":29.0897,"2023-12-22":29.1344,"2023-12-23":29.1344,"2023-12-24":29.1344,"2023-12-25":29.2108,"2023-12-26":29.2647,"2023-12-27":29.3374,"2023-12-28":29.3973,"2023-12-29":29.4382,"2023-12-30":29.4382,"2023-12-31":29.4382,"2024-01-01":29.4382,"2024-01-02":29.6675,"2024-01-03":29.7394,"2024-01-04":29.7452,"2024-01-05":29.7714,"2024-01-06":29.7714,"2024-01-07":29.7714,"2024-01-08":29.8342,"2024-01-09":29.8823,"2024-01-10":29.9136,"2024-01-11":29.9581,"2024-01-12":30.0163,"2024-01-13":30.0163,"2024-01-14":30.0163,"2024-01-15":30.0449,"2024-01-16":30.047,"2024-01-17":30.0721,"2024-01-18":30.0847,"2024-01-19":30.1219,"2024-01-20":30.1219,"2024-01-21":30.1219,"2024-01-22":30.1806,"2024-01-23":30.2185,"2024-01-24":30.2145,"2024-01-25":30.2185,"2024-01-26":30.2343,"2024-01-27":30.2343,"2024-01-28":30.2343,"2024-01-29":30.2849,"2024-01-30":30.3053,"2024-01-31":30.2952,"2024-02-01":30.2952,"2024-02-02":30.3735,"2024-02-03":30.3735,"2024-02-04":30.3735,"2024-02-05":30.477,"2024-02-06":30.5077,"2024-02-07":30.5349,"2024-02-08":30.5357,"2024-02-09":30.6005,"2024-02-10":30.6005,"2024-02-11":30.6005,"2024-02-12":30.6318,"2024-02-13":30.669,"2024-02-14":30.6835,"2024-02-15":30.6968,"2024-02-16":30.7221,"2024-02-17":30.7221,"2024-02-18":30.7221,"2024-02-19":30.804,"2024-02-20":30.8388,"2024-02-21":30.9096,"2024-02-22":30.9582,"2024-02-23":31.0047,"2024-02-24":31.0047,"2024-02-25":31.0047,"2024-02-26":31.0441,"2024-02-27":31.0737,"2024-02-28":31.1201,"2024-02-29":31.1597,"2024-03-01":31.2392,"2024-03-02":31.2392,"2024-03-03":31.2392,"2024-03-04":31.4069,"2024-03-05":31.5457,"2024-03-06":31.6612,"2024-03-07":31.7768,"2024-03-08":31.8618,"2024-03-09":31.8618,"2024-03-10":31.8618,"2024-03-11":31.9378,"2024-03-12":31.9856,"2024-03-13":32.039,"2024-03-14":32.0629,"2024-03-15":32.1214,"2024-03-16":32.1214,"2024-03-17":32.1214,"2024-03-18":32.2448,"2024-03-19":32.2791,"2024-03-20":32.3294,"2024-03-21":32.3105,"2024-03-22":31.9675,"2024-03-23":31.9675,"2024-03-24":31.9675,"2024-03-25":32.0592,"2024-03-26":32.1005,"2024-03-27":32.165,"2024-03-28":32.2596,"2024-03-29":32.2854,"2024-03-30":32.2854,"2024-03-31":32.2854,"2024-04-01":32.3568,"2024-04-02":32.1302,"2024-04-03":31.9392,"2024-04-04":31.8396,"2024-04-05":31.9209,"2024-04-06":31.9209,"2024-04-07":31.9209,"2024-04-08":32.006,"2024-04-09":32.006,"2024-04-10":32.006,"2024-04-11":32.006,"2024-04-12":32.006,"2024-04-13":32.006,"2024-04-14":32.006,"2024-04-15":32.3271,"2024-04-16":32.4049,"2024-04-17":32.4626,"2024-04-18":32.4551,"2024-04-19":32.5096,"2024-04-20":32.5096,"2024-04-21":32.5096,"2024-04-22":32.5,"2024-04-23":32.5,"2024-04-24":32.4742,"2024-04-25":32.4747,"2024-04-26":32.4527,"2024-04-27":32.4527,"2024-04-28":32.4527,"2024-04-29":32.3389,"2024-04-30":32.3091,"2024-05-01":32.3091,"2024-05-02":32.3199,"2024-05-03":32.2472,"2024-05-04":32.2472,"2024-05-05":32.2472,"2024-05-06":32.2242,"2024-05-07":32.2073,"2024-05-08":32.207,"2024-05-09":32.177,"2024-05-10":32.1534,"2024-05-11":32.1534,"2024-05-12":32.1534,"2024-05-13":32.1496,"2024-05-14":32.1946,"2024-05-15":32.2296,"2024-05-16":32.1573,"2024-05-17":32.194,"2024-05-18":32.194,"2024-05-19":32.194,"2024-05-20":32.156,"2024-05-21":32.1556,"2024-05-22":32.1209,"2024-05-23":32.1421,"2024-05-24":32.1452,"2024-05-25":32.1452,"2024-05-26":32.1452,"2024-05-27":32.1311,"2024-05-28":32.1203,"2024-05-29":32.1874,"2024-05-30":32.2489,"2024-05-31":32.1339,"2024-06-01":32.1339,"2024-06-02":32.1339,"2024-06-03":32.1534,"2024-06-04":32.2687,"2024-06-05":32.4547,"2024-06-06":32.1775,"2024-06-07":32.1923,"2024-06-08":32.1923,"2024-06-09":32.1923,"2024-06-10":32.3699,"2024-06-11":32.3127,"2024-06-12":32.3073,"2024-06-13":32.2313,"2024-06-14":32.4579,"2024-06-15":32.4579,"2024-06-16":32.4579,"2024-06-17":32.4579,"2024-06-18":32.4579,"2024-06-19":32.4579,"2024-06-20":32.5711,"2024-06-21":32.781,"2024-06-22":32.781,"2024-06-23":32.781,"2024-06-24":32.8078,"2024-06-25":32.9015,"2024-06-26":32.904,"2024-06-27":32.8417,"2024-06-28":32.8262,"2024-06-29":32.8262,"2024-06-30":32.8262,"2024-07-01":32.6207,"2024-07-02":32.629,"2024-07-03":32.4929,"2024-07-04":32.5011,"2024-07-05":32.6301,"2024-07-06":32.6301,"2024-07-07":32.6301,"2024-07-08":32.6401,"2024-07-09":32.7362,"2024-07-10":32.8849,"2024-07-11":32.8473,"2024-07-12":32.9069,"2024-07-13":32.9069,"2024-07-14":32.9069,"2024-07-15":32.9069,"2024-07-16":33.0223,"2024-07-17":33.038,"2024-07-18":33.0389,"2024-07-19":33.0042,"2024-07-20":33.0042,"2024-07-21":33.0042,"2024-07-22":32.9441,"2024-07-23":32.8805,"2024-07-24":32.8106,"2024-07-25":32.9833,"2024-07-26":32.9586,"2024-07-27":32.9586,"2024-07-28":32.9586,"2024-07-29":32.9509,"2024-07-30":33.0304,"2024-07-31":33.0835,"2024-08-01":33.0782,"2024-08-02":33.0763,"2024-08-03":33.0763,"2024-08-04":33.0763,"2024-08-05":33.2573,"2024-08-06":33.3984,"2024-08-07":33.4965,"2024-08-08":33.4471,"2024-08-09":33.4596,"2024-08-10":33.4596,"2024-08-11":33.4596,"2024-08-12":33.4843,"2024-08-13":33.4928,"2024-08-14":33.4846,"2024-08-15":33.5746,"2024-08-16":33.6107,"2024-08-17":33.6107,"2024-08-18":33.6107,"2024-08-19":33.6524,"2024-08-20":33.7482,"2024-08-21":33.8465,"2024-08-22":33.8506,"2024-08-23":33.8863,"2024-08-24":33.8863,"2024-08-25":33.8863,"2024-08-26":33.9282,"2024-08-27":33.9577,"2024-08-28":33.9626,"2024-08-29":33.9233,"2024-08-30":33.9233,"2024-08-31":33.9233,"2024-09-01":33.9233,"2024-09-02":33.9196,"2024-09-03":33.887,"2024-09-04":33.9725,"2024-09-05":33.9091,"2024-09-06":33.8937,"2024-09-07":33.8937,"2024-09-08":33.8937,"2024-09-09":33.9676,"2024-09-10":33.9904,"2024-09-11":33.9398,"2024-09-12":33.8984,"2024-09-13":33.8159,"2024-09-14":33.8159,"2024-09-15":33.8159,"2024-09-16":33.8895,"2024-09-17":33.9681,"2024-09-18":34.0283,"2024-09-19":33.9766,"2024-09-20":33.9531,"2024-09-21":33.9531,"2024-09-22":33.9531,"2024-09-23":34.0627,"2024-09-24":34.0815,"2024-09-25":34.0894,"2024-09-26":34.0982,"2024-09-27":34.09,"2024-09-28":34.09,"2024-09-29":34.09,"2024-09-30":34.121,"2024-10-01":34.1247,"2024-10-02":34.1538,"2024-10-03":34.1126,"2024-10-04":34.1398,"2024-10-05":34.1398,"2024-10-06":34.1398,"2024-10-07":34.1881,"2024-10-08":34.2103,"2024-10-09":34.1951,"2024-10-10":34.1522,"2024-10-11":34.1625,"2024-10-12":34.1625,"2024-10-13":34.1625,"2024-10-14":34.2034,"2024-10-15":34.2018,"2024-10-16":34.1633,"2024-10-17":34.1155,"2024-10-18":34.1786,"2024-10-19":34.1786,"2024-10-20":34.1786,"2024-10-21":34.1788,"2024-10-22":34.1821,"2024-10-23":34.2011,"2024-10-24":34.1902,"2024-10-25":34.189,"2024-10-26":34.189,"2024-10-27":34.189,"2024-10-28":34.189,"2024-10-29":34.189,"2024-10-30":34.2095,"2024-10-31":34.1787,"2024-11-01":34.2236,"2024-11-02":34.2236,"2024-11-03":34.2236,"2024-11-04":34.2757,"2024-11-05":34.282,"2024-11-06":34.1841,"2024-11-07":34.1764,"2024-11-08":34.2614,"2024-11-09":34.2614,"2024-11-10":34.2614,"2024-11-11":34.2869,"2024-11-12":34.3128,"2024-11-13":34.3118,"2024-11-14":34.2996,"2024-11-15":34.3333,"2024-11-16":34.3333,"2024-11-17":34.3333,"2024-11-18":34.4321,"2024-11-19":34.5162,"2024-11-20":34.4372,"2024-11-21":34.4495,"2024-11-22":34.4642,"2024-11-23":34.4642,"2024-11-24":34.4642,"2024-11-25":34.5184,"2024-11-26":34.5726,"2024-11-27":34.5728,"2024-11-28":34.5697,"2024-11-29":34.5794,"2024-11-30":34.5794,"2024-12-01":34.5794,"2024-12-02":34.6432,"2024-12-03":34.6766,"2024-12-04":34.6873,"2024-12-05":34.6753,"2024-12-06":34.7007,"2024-12-07":34.7007,"2024-12-08":34.7007,"2024-12-09":34.7499,"2024-12-10":34.7797,"2024-12-11":34.8028,"2024-12-12":34.8177,"2024-12-13":34.8621,"2024-12-14":34.8621,"2024-12-15":34.8621,"2024-12-16":34.8985,"2024-12-17":34.9219,"2024-12-18":34.9529,"2024-12-19":35.0067,"2024-12-20":35.0619,"2024-12-21":35.0619,"2024-12-22":35.0619,"2024-12-23":35.1065,"2024-12-24":35.1814,"2024-12-25":35.2162,"2024-12-26":35.2033,"2024-12-27":35.1368,"2024-12-28":35.1368,"2024-12-29":35.1368,"2024-12-30":35.2233,"2024-12-31":35.2803,"2025-01-01":35.2803};


document.getElementById('uploadPdf').addEventListener('change', function(event) {
    const files = event.target.files;
    const fileCounter = document.getElementById('fileCounter');
    
    if (files.length > 0) {
        // Hata mesajını ve önceki tabloyu temizle
        document.getElementById('tableContainer').innerHTML = '';
        
        // Dosya sayacını güncelle
        fileCounter.innerHTML = `
            <i class="fas fa-file-pdf"></i>
            ${files.length} adet ekstre yüklendi
        `;
        fileCounter.className = 'file-counter success';
        
        let allData = [];
        let processedFiles = 0;

        // FIFO hesaplayıcıyı sıfırla
        calculator = new FifoCalculator();

        for (let file of files) {
            const reader = new FileReader();
            reader.onload = function() {
                extractInvestmentTable(reader.result, allData, () => {
                    processedFiles++;
                    if (processedFiles === files.length) {
                        // Tarihleri doğru parse et ve tarihsel olarak sırala
                        allData.sort((a, b) => parseDate(a[0]) - parseDate(b[0]));
                        displayTable(allData);
                    }
                });
            };
            reader.readAsArrayBuffer(file);
        }
    } else {
        // Dosya seçilmediğinde sayacı temizle
        fileCounter.innerHTML = '';
        fileCounter.className = 'file-counter';
    }
});

document.addEventListener('DOMContentLoaded', function() {
    const disclaimerAccepted = localStorage.getItem('disclaimerAccepted');
    const disclaimerVersion = '1.0';
    const disclaimerContainer = document.getElementById('disclaimerContainer');
    
    if (disclaimerAccepted === disclaimerVersion) {
        document.getElementById('disclaimerAccept').checked = true;
        document.getElementById('uploadPdf').disabled = false;
        disclaimerContainer.classList.add('accepted');
    }
});

document.getElementById('disclaimerAccept').addEventListener('change', function() {
    const disclaimerContainer = document.getElementById('disclaimerContainer');
    
    if (this.checked) {
        localStorage.setItem('disclaimerAccepted', '1.0');
        document.getElementById('uploadPdf').disabled = false;
        disclaimerContainer.classList.add('accepted');
    } else {
        localStorage.removeItem('disclaimerAccepted');
        document.getElementById('uploadPdf').disabled = true;
        disclaimerContainer.classList.remove('accepted');
    }
});

// Dosya yükleme alanına tıklandığında kontrol
document.querySelector('.file-upload-label').addEventListener('click', function(e) {
    const disclaimerAccepted = document.getElementById('disclaimerAccept').checked;
    
    if (!disclaimerAccepted) {
        e.preventDefault();
        showPopup();
    }
});

function showPopup() {
    document.getElementById('popup').style.display = 'flex';
}

function closePopup() {
    document.getElementById('popup').style.display = 'none';
    // Sorumluluk beyanına scroll et
    document.querySelector('.disclaimer').scrollIntoView({ 
        behavior: 'smooth',
        block: 'center'
    });
}

// Popup dışına tıklandığında kapatma
document.getElementById('popup').addEventListener('click', function(e) {
    if (e.target === this) {
        closePopup();
    }
});

function debug_log(message) {
    if (DEBUG_MODE) {
        console.log(message);
    }
}

async function extractInvestmentTable(pdfData, allData, callback) {
    const pdf = await pdfjsLib.getDocument({ data: pdfData }).promise;
    let extractedText = "";

    debug_log("PDF Yüklendi. Toplam sayfa sayısı:", pdf.numPages);

    for (let i = 1; i <= pdf.numPages; i++) {
        const page = await pdf.getPage(i);
        const textContent = await page.getTextContent();
        const textItems = textContent.items.map(item => item.str).join(" ");

        debug_log(`--- Sayfa ${i} İçeriği ---`);
        debug_log(textItems);

        extractedText += textItems + " ";
    }

    let match = extractedText.match(/YATIRIM İŞLEMLERİ\s+\(.*?\)\s+\d{2}\/\d{2}\/\d{2}\s+\d{2}\/\d{2}\/\d{2}\s+(.*?)\s+HESAP İŞLEMLERİ/);
    if (match && match[1]) {
        let tableText = match[1].trim();
        debug_log("Çıkarılan Tablo Metni:", tableText);
        let parsedData = parseTableData(tableText);
        allData.push(...parsedData);
    } else {
        debug_log("Bu dosyada yatırım işlemi bulunamadı.");
    }

    callback();
}

function parseTableData(tableText) {
    let datePattern = /\d{2}\/\d{2}\/\d{2} \d{2}:\d{2}:\d{2}/g;
    let matches = [...tableText.matchAll(datePattern)];
    
    let structuredData = [];

    matches.forEach((match, index) => {
        let date = match[0];
        let start = match.index + match[0].length;
        let end = (index < matches.length - 1) ? matches[index + 1].index : tableText.length;
        
        let rowContent = tableText.substring(start, end).trim();
        let rowData = rowContent.split(/\s{2,}/);
        rowData.unshift(date);

        // Virgülü nokta yap
        for (let i = 6; i <= 11; i++) {
            if (rowData[i]) {
                rowData[i] = rowData[i].replace(',', '.');
            }
        }

        structuredData.push(rowData);
    });

    return structuredData;
}

function parseDate(dateString) {
    const [day, month, year, time] = dateString.split(/\/|\s+/);
    const [hour, minute, second] = time.split(":");
    const fullYear = `20${year}`; // "24" -> "2024" dönüşümü

    return new Date(fullYear, month - 1, day, hour, minute, second);
}

// YI-ÜFE verilerini işlemek için yardımcı fonksiyonlar
function parseYiufeData(yiufeText) {
    const lines = yiufeText.trim().split('\n').slice(1); // Başlığı atla
    const yiufeMap = new Map();
    
    lines.forEach(line => {
        const [date, value] = line.split('\t');
        const [month, year] = date.split('-');
        const key = `${year}${month.padStart(2, '0')}`;
        yiufeMap.set(key, parseFloat(value));
    });
    
    return yiufeMap;
}

// FIFO 
class FifoCalculator {
    constructor() {
        this.purchases = [];
        this.yiufeData = YIUFE_DATA;
        this.exchangeRates = TCMB_RATES;
        
    }

    // Bir önceki iş gününün dolar kurunu bul
    getPreviousExchangeRate(dateStr) {
        const [day, month, year] = dateStr.split('/');
        const currentDate = new Date(20 + year, month - 1, day);
        
        // Bir gün öncesinden başlayarak geriye doğru kur ara
        for (let i = 1; i <= 10; i++) { // En fazla 10 gün geriye git
            const prevDate = new Date(currentDate);
            prevDate.setDate(prevDate.getDate() - i);
            
            const prevDateStr = prevDate.toISOString().split('T')[0]; // YYYY-MM-DD formatı
            if (this.exchangeRates[prevDateStr]) {
                debug_log(`Kur bulundu: ${prevDateStr} -> ${this.exchangeRates[prevDateStr]}`);
                return this.exchangeRates[prevDateStr];
            }
        }
        
        showError(`${dateStr} tarihine ait döviz kuru bulunamadı. Lütfen TCMB kurlarının yüklendiğinden emin olun.`);
        return null;
    }

    // Bir önceki ayın Yİ-ÜFE değerini bul
    getPreviousYiufe(dateStr) {
        const [day, month, year] = dateStr.split(' ')[0].split('/');
        const currentDate = new Date(20 + year, month - 1, day);
        
        // Bir ay öncesinin Yİ-ÜFE değerini al
        const prevDate = new Date(currentDate);
        prevDate.setMonth(prevDate.getMonth() - 1);
        
        const prevMonth = (prevDate.getMonth() + 1).toString().padStart(2, '0');
        const prevYear = prevDate.getFullYear();
        
        const key = `${prevYear}${prevMonth}`;
        const yiufeValue = this.yiufeData[key];
        
        if (!yiufeValue) {
            showError(`${prevYear}-${prevMonth} dönemine ait Yİ-ÜFE verisi bulunamadı. Lütfen Yİ-ÜFE verilerinin yüklendiğinden emin olun.`);
            return null;
        }
        
        debug_log(`Yİ-ÜFE bulundu: ${key} -> ${yiufeValue}`);
        return yiufeValue;
    }

    addTransaction(date, type, symbol, orderType, amount, price, fee, currency = 'USD') {
        const exchangeRate = this.getPreviousExchangeRate(date.split(' ')[0]);
        
        if (!exchangeRate) {
            return null;
        }
        
        if (!amount || amount === '0' || price === '-') {
            debug_log('İşlem atlandı:', { date, type, symbol, amount });
            return null;
        }

        amount = parseFloat(amount);
        price = parseFloat(price);
        fee = parseFloat(fee) || 0;
        
        const priceInTRY = price * exchangeRate;
        const feeInTRY = fee * exchangeRate;

        if (orderType === 'Alış') {
            // Alış işlemlerini purchases listesine ekle
            this.purchases.push({
                date,
                symbol,
                amount,
                price: priceInTRY,
                fee: feeInTRY,
                exchangeRate,
                originalPrice: price // USD cinsinden orijinal fiyat
            });
            debug_log('Alış Kaydedildi:', {
                date,
                symbol,
                amount,
                priceInTRY,
                feeInTRY
            });
            return null;
        } else if (orderType === 'Satış') {
            return this.calculateProfit(date, symbol, amount, priceInTRY, feeInTRY, price);
        }
        
        return null;
    }

    calculateProfit(sellDate, symbol, sellAmount, sellPriceTRY, sellFeeTRY, sellPriceUSD) {
        debug_log('Satış Hesaplama Başladı:', {
            sellDate, symbol, sellAmount, sellPriceTRY, sellFeeTRY
        });

        // Satış için kur kontrolü
        const sellExchangeRate = this.getPreviousExchangeRate(sellDate.split(' ')[0]);
        if (!sellExchangeRate) {
            return null;
        }

        let remainingSellAmount = sellAmount;
        let profitDetails = [];
        let totalProfit = 0;
        let totalAdjustedProfit = 0;
        let usedPurchases = [];
        
        // Aynı semboldeki alışları bul
        const availablePurchases = this.purchases.filter(p => p.symbol === symbol);
        
        if (availablePurchases.length === 0) {
            showError(`${symbol} sembolü için uygun alış bulunamadı. Tüm dosyaları eklediğinizden emin olun.`, false);
            console.error('Satış için uygun alış bulunamadı:', symbol);
            return null;
        }

        let purchaseIndex = 0;
        
        // Satışı parçalara ayır
        while (remainingSellAmount > 0 && purchaseIndex < availablePurchases.length) {
            const purchase = availablePurchases[purchaseIndex];
            const availableAmount = purchase.amount - (purchase.usedAmount || 0);
            
            if (availableAmount <= 0) {
                purchaseIndex++;
                continue;
            }

            const usedAmount = Math.min(remainingSellAmount, availableAmount);
            
            // Bu parça için komisyonları oranla
            const partialSellFee = sellFeeTRY * (usedAmount / sellAmount);
            const partialBuyFee = purchase.fee * (usedAmount / purchase.amount);
            
            // Satış ve alış tutarları (TRY)
            const sellValue = usedAmount * sellPriceTRY;
            const buyValue = usedAmount * purchase.price;
            
            // Yİ-ÜFE değerleri
            const buyYiufe = this.getPreviousYiufe(purchase.date);
            const sellYiufe = this.getPreviousYiufe(sellDate);
            
            if (!buyYiufe || !sellYiufe) {
                return null;
            }

            const inflationRate = sellYiufe / buyYiufe;
            
            // Enflasyon düzeltmeli değerler
            const adjustedBuyValue = buyValue * inflationRate;
            
            // Kar hesaplaması
            const profit = sellValue - buyValue - partialSellFee - partialBuyFee;
            const adjustedProfit = sellValue - adjustedBuyValue - partialSellFee - (partialBuyFee * inflationRate);

            // Kurları al
            const buyExchangeRate = purchase.exchangeRate;
            const sellExchangeRate = this.getPreviousExchangeRate(sellDate.split(' ')[0]);

            profitDetails.push({
                buyDate: purchase.date,
                sellDate: sellDate,
                symbol: symbol,
                amount: usedAmount,
                buyPrice: purchase.originalPrice,
                sellPrice: sellPriceUSD,
                buyValue: buyValue,
                sellValue: sellValue,
                buyFee: partialBuyFee,
                sellFee: partialSellFee,
                profit: profit,
                adjustedProfit: adjustedProfit,
                buyYiufe: buyYiufe,
                sellYiufe: sellYiufe,
                inflationRate: inflationRate,
                buyExchangeRate: buyExchangeRate,
                sellExchangeRate: sellExchangeRate
            });

            // Kullanılan alış miktarını güncelle
            purchase.usedAmount = (purchase.usedAmount || 0) + usedAmount;
            usedPurchases.push(purchase);

            totalProfit += profit;
            totalAdjustedProfit += adjustedProfit;
            remainingSellAmount -= usedAmount;
            
            if (remainingSellAmount > 0) {
                purchaseIndex++;
            }
        }

        // Tamamen kullanılmış alışları listeden çıkar
        this.purchases = this.purchases.filter(p => (p.usedAmount || 0) < p.amount);
        
        return {
            details: profitDetails,
            rawProfit: totalProfit,
            adjustedProfit: totalAdjustedProfit,
            taxableAmount: Math.max(0, totalAdjustedProfit)
        };
    }
}

// Global değişken olarak tanımla
let lastProcessedData = null;

function displayTable(data) {
    // Veriyi global değişkende sakla
    lastProcessedData = data;
    
    const calculator = new FifoCalculator();
    const vergiDonemi = document.getElementById('vergiDonemi').value;
    const vergiOrani = parseFloat(document.getElementById('vergiOrani').value) / 100;
    
    let totalTaxableProfit = 0;
    let allTransactions = [];
    let hasError = false;
    
    // Tüm alışları işle
    for (let row of data) {
        if (row[3] === 'Alış' && row[8] && row[8] !== '0' && row[9] !== '-') {
            const result = calculator.addTransaction(
                row[0], row[1], row[2], row[3], row[8], row[9], row[10], 'USD'
            );
            
            // Eğer işlem başarısız olduysa (null döndüyse ve hata mesajı gösterildiyse)
            if (result === null && document.querySelector('.error-message')) {
                hasError = true;
                break;
            }

            const [day, month, year] = row[0].split(' ')[0].split('/');
            const islemYili = "20" + year;
            allTransactions.push({
                ...row,
                type: 'original',
                vergiDonemi: islemYili
            });
        }
    }
    
    // Hata varsa işlemleri sonlandır
    if (hasError) {
        return;
    }
    
    // Tüm satışları işle ve parçala
    for (let row of data) {
        if (row[3] === 'Satış' && row[8] && row[8] !== '0' && row[9] !== '-') {
            const [day, month, year] = row[0].split(' ')[0].split('/');
            const islemYili = "20" + year;
            const result = calculator.addTransaction(
                row[0], row[1], row[2], row[3], row[8], row[9], row[10], 'USD'
            );
            
            // Eğer işlem başarısız olduysa (null döndüyse ve hata mesajı gösterildiyse)
            if (result === null && document.querySelector('.error-message')) {
                hasError = true;
                break;
            }
            
            if (result && result.details) {
                result.details.forEach(detail => {
                    // Vergiye tabi kazancı hesapla - sadece seçili dönem için
                    let taxableAmount = 0;
                    if (islemYili === vergiDonemi && detail.adjustedProfit > 0) {
                        taxableAmount = detail.adjustedProfit;
                    }
                    totalTaxableProfit += taxableAmount;

                    const newRow = [...row];
                    allTransactions.push({
                        ...newRow,
                        type: 'split',
                        vergiDonemi: islemYili,
                        amount: detail.amount,
                        buyDate: detail.buyDate,
                        buyPrice: detail.buyPrice,
                        adjustedProfit: detail.adjustedProfit,
                        buyExchangeRate: detail.buyExchangeRate,
                        sellExchangeRate: detail.sellExchangeRate,
                        buyYiufe: detail.buyYiufe,
                        sellYiufe: detail.sellYiufe,
                        buyValue: detail.buyValue
                    });
                });
            }
        }
    }
    
    // Hata varsa işlemleri sonlandır
    if (hasError) {
        return;
    }

    // Önce özet bilgilerini oluştur
    let summaryHtml = `
        <div class="summary-container">
            <strong>Toplam Vergiye Tabi Kazanç (TL): 
                <span class="${totalTaxableProfit >= 0 ? 'positive-value' : 'negative-value'}">
                    ${totalTaxableProfit.toFixed(2)}
                </span>
            </strong>
            <strong>Ödenecek Vergi (%${vergiOrani * 100}) (TL): 
                <span style="color: #dc3545">
                    ${(totalTaxableProfit * vergiOrani).toFixed(2)}
                </span>
            </strong>
            <strong>Vergi Sonrası Toplam Kazanç (TL): 
                <span class="${(totalTaxableProfit * (1 - vergiOrani)) >= 0 ? 'positive-value' : 'negative-value'}">
                    ${(totalTaxableProfit * (1 - vergiOrani)).toFixed(2)}
                </span>
            </strong>
        </div>
        <div class="table-container">
    `;

    // Sonra tablo HTML'ini oluştur
    let tableHtml = createTableHeader();
    let tableTotalTaxableProfit = 0;
    
    for (let transaction of allTransactions) {
        const rowHtml = createTableRow(transaction);
        tableHtml += rowHtml;
        
        // Tablodaki vergiye tabi kazanç değerini topla
        if (transaction.type === 'split') {
            const vergiyeTabiKazancStr = rowHtml.match(/td>([0-9.]+)<\/td>\s*<\/tr>$/)?.[1];
            if (vergiyeTabiKazancStr && vergiyeTabiKazancStr !== '0.00') {
                tableTotalTaxableProfit += parseFloat(vergiyeTabiKazancStr);
            }
        }
    }
    
    tableHtml += '</tbody></table></div>';

    // Önce özet, sonra tablo olacak şekilde HTML'i yerleştir
    document.getElementById('tableContainer').innerHTML = summaryHtml + tableHtml;

    // Download butonlarını göster/gizle
    const downloadButtons = document.querySelectorAll('.download-button');
    downloadButtons.forEach(button => {
        button.style.display = allTransactions.length > 0 ? 'inline-block' : 'none';
    });
}

function createTableHeader() {
    const vergiDonemi = document.getElementById('vergiDonemi').value;
    return `<table>
        <thead class="sticky-header">
            <tr>
                <th colspan="23" style="text-align: center; background-color: #e6e6e6;">
                    USD BAZLI YATIRIM İŞLEMLERİ ${vergiDonemi}
                </th>
            </tr>
            <tr>
                <th>Tarih</th>
                <th>Vergi Dönemi</th>
                <th>İşlem Türü</th>
                <th>Sembol</th>
                <th>İşlem Tipi</th>
                <th>İşlem Durumu</th>
                <th>Para Birimi</th>
                <th>Adet</th>
                <th>Ortalama İşlem Fiyatı (USD)</th>
                <th>İşlem Ücreti (USD)</th>
                <th>İşlem Tutarı (USD)</th>
                <th>İşlem Tutarı (TL)</th>
                <th>Alış Tarihi</th>
                <th>Alış Fiyatı (USD)</th>
                <th>Alış Kuru (TL/USD)</th>
                <th>Alış Yİ-ÜFE</th>
                <th>Satış Kuru (TL/USD)</th>
                <th>Satış Yİ-ÜFE</th>
                <th>Yİ-ÜFE Değişimi</th>
                <th>Nominal Alım Tutarı (TL)</th>
                <th>Reel Alım Tutarı (TL)</th>
                <th>Vergiye Tabi Kazanç (TL)</th>
                <th>Vergi (TL)</th>
            </tr>
        </thead>
        <tbody>`;
}

function createTableRow(transaction) {
    const isSale = transaction.type === 'split';  // 'isSatis' yerine 'isSale' kullanılacak
    
    // Güvenli bir şekilde sayısal değerleri formatla
    const formatNumber = (value, decimals = 2) => {
        if (value === null || value === undefined || isNaN(value)) return '-';
        return parseFloat(value).toFixed(decimals);
    };

    // Kur ve Yİ-ÜFE değerlerini güvenli bir şekilde al
    const buyExchangeRate = isSale && transaction.buyExchangeRate ? formatNumber(transaction.buyExchangeRate, 4) : '-';
    const sellExchangeRate = isSale && transaction.sellExchangeRate ? formatNumber(transaction.sellExchangeRate, 4) : '-';
    const buyYiufe = isSale && transaction.buyYiufe ? formatNumber(transaction.buyYiufe, 2) : '-';
    const sellYiufe = isSale && transaction.sellYiufe ? formatNumber(transaction.sellYiufe, 2) : '-';
    
    // Yİ-ÜFE değişim oranını hesapla
    let yiufeChange = '-';
    let isInflationAdjusted = false;
    if (isSale && buyYiufe !== '-' && sellYiufe !== '-') {
        const buyYiufeVal = parseFloat(transaction.buyYiufe);
        const sellYiufeVal = parseFloat(transaction.sellYiufe);
        if (!isNaN(buyYiufeVal) && !isNaN(sellYiufeVal) && buyYiufeVal !== 0) {
            const changePercent = ((sellYiufeVal - buyYiufeVal) / buyYiufeVal) * 100;
            yiufeChange = formatNumber(changePercent, 2) + '%';
            isInflationAdjusted = changePercent > 10;
        }
    }
    
    // İşlem Tutarı hesapla (USD ve TL cinsinden)
    let islemTutariUSD = '-';
    let islemTutariTL = '-';
    if (isSale) {
        const amount = parseFloat(transaction.amount);
        const price = parseFloat(transaction[9]);
        const exchangeRate = parseFloat(transaction.sellExchangeRate);
        if (!isNaN(amount) && !isNaN(price)) {
            islemTutariUSD = formatNumber(amount * price);
            if (!isNaN(exchangeRate)) {
                islemTutariTL = formatNumber(amount * price * exchangeRate);
            }
        }
    } else {
        const amount = parseFloat(transaction[8]);
        const price = parseFloat(transaction[9]);
        const exchangeRate = parseFloat(transaction.buyExchangeRate);
        if (!isNaN(amount) && !isNaN(price)) {
            islemTutariUSD = formatNumber(amount * price);
            if (!isNaN(exchangeRate)) {
                islemTutariTL = formatNumber(amount * price * exchangeRate);
            }
        }
    }
    
    // Nominal ve Reel Alım Tutarı hesapla
    let nominalBuyValue = '-';
    let reelBuyValue = '-';
    let vergiyeTabiKazanc = '-';
    
    if (isSale) {
        const amount = parseFloat(transaction.amount);
        const buyPrice = parseFloat(transaction.buyPrice);
        const buyRate = parseFloat(transaction.buyExchangeRate);
        const buyYiufeVal = parseFloat(transaction.buyYiufe);
        const sellYiufeVal = parseFloat(transaction.sellYiufe);
        
        if (!isNaN(amount) && !isNaN(buyPrice) && !isNaN(buyRate)) {
            const nominal = amount * buyPrice * buyRate;
            nominalBuyValue = formatNumber(nominal);
            
            if (!isNaN(buyYiufeVal) && !isNaN(sellYiufeVal) && buyYiufeVal !== 0) {
                const yiufeChange = ((sellYiufeVal - buyYiufeVal) / buyYiufeVal) * 100;
                
                const satisTutari = parseFloat(islemTutariTL);
                let kazanc = 0;
                
                if (yiufeChange > 10) {
                    const reelAlimTutari = nominal * (sellYiufeVal / buyYiufeVal);
                    reelBuyValue = formatNumber(reelAlimTutari);
                    kazanc = satisTutari - reelAlimTutari;
                } else {
                    reelBuyValue = nominalBuyValue;
                    kazanc = satisTutari - nominal;
                }
                
                // Sadece kar varsa vergiye tabi kazanç olarak göster
                vergiyeTabiKazanc = kazanc > 0 ? formatNumber(kazanc) : '0.00';
            }
        }
    }
    
    // Vergi hesaplama
    const vergiOrani = parseFloat(document.getElementById('vergiOrani').value) / 100;
    const vergiDonemi = document.getElementById('vergiDonemi').value;
    let vergiTutari = '-';
    
    if (isSale) {
        const [day, month, year] = transaction[0].split(' ')[0].split('/');
        const satisYili = "20" + year;
        
        if (vergiyeTabiKazanc !== '-' && parseFloat(vergiyeTabiKazanc) > 0) {
            if (satisYili === vergiDonemi) {
                vergiTutari = (parseFloat(vergiyeTabiKazanc) * vergiOrani).toFixed(2);
            } else {
                vergiTutari = `0 (${vergiDonemi} için)`;
            }
        } else if (vergiyeTabiKazanc !== '-') {
            vergiTutari = '0.00';
        }
    }

    // Vergi tutarı için stil belirleme
    const vergiStyle = vergiTutari !== '-' && !vergiTutari.includes('için') && parseFloat(vergiTutari) > 0 
        ? 'style="color: #dc3545; font-weight: bold;"' 
        : '';

    // Adet değerini tabloda gösterirken 2 hane, veri olarak tam haliyle sakla
    const amount = isSale ? transaction.amount : transaction[8];
    const displayAmount = formatNumber(amount, 2);
    const actualAmount = amount;  // Orijinal değeri koru

    return `<tr>
        <td>${transaction[0]}</td>
        <td>${isSale ? transaction.vergiDonemi : '-'}</td>
        <td>${transaction[1]}</td>
        <td>${transaction[2]}</td>
        <td>${transaction[3]}</td>
        <td>${transaction[4]}</td>
        <td>${transaction[5] || 'USD'}</td>
        <td data-value="${actualAmount}">${displayAmount}</td>
        <td>${formatNumber(transaction[9])}</td>
        <td>${formatNumber(transaction[10] || 0)}</td>
        <td>${islemTutariUSD}</td>
        <td>${islemTutariTL}</td>
        <td>${isSale ? transaction.buyDate : '-'}</td>
        <td>${isSale ? formatNumber(transaction.buyPrice) : '-'}</td>
        <td>${buyExchangeRate}</td>
        <td>${buyYiufe}</td>
        <td>${sellExchangeRate}</td>
        <td>${sellYiufe}</td>
        <td style="color: ${isInflationAdjusted ? '#28a745' : 'inherit'}">${yiufeChange}</td>
        <td>${nominalBuyValue}</td>
        <td>${reelBuyValue}</td>
        <td>${vergiyeTabiKazanc}</td>
        <td ${vergiStyle}>${vergiTutari}</td>
    </tr>`;
}

// Vergi dönemi değiştiğinde tabloyu güncelle
document.getElementById('vergiDonemi').addEventListener('change', function() {
    if (lastProcessedData) {
        displayTable(lastProcessedData);
    }
});

// Vergi oranı değiştiğinde tabloyu güncelle
document.getElementById('vergiOrani').addEventListener('change', function() {
    const files = document.getElementById('uploadPdf').files;
    if (files.length > 0) {
        let allData = [];
        let processedFiles = 0;

        for (let file of files) {
            const reader = new FileReader();
            reader.onload = function() {
                extractInvestmentTable(reader.result, allData, () => {
                    processedFiles++;
                    if (processedFiles === files.length) {
                        allData.sort((a, b) => parseDate(a[0]) - parseDate(b[0]));
                        displayTable(allData);
                    }
                });
            };
            reader.readAsArrayBuffer(file);
        }
    } else {
        // Dosya yüklü ve tablo zaten oluşturulmuşsa sadece özet kısmını güncelle
        const summaryContainer = document.querySelector('.summary-container');
        if (summaryContainer) {
            const totalTaxableProfit = parseFloat(summaryContainer.querySelector('span').textContent);
            const vergiOrani = parseFloat(document.getElementById('vergiOrani').value) / 100;
            
            summaryContainer.innerHTML = `
                <strong>Toplam Vergiye Tabi Kazanç (TL): 
                    <span class="${totalTaxableProfit >= 0 ? 'positive-value' : 'negative-value'}">
                        ${totalTaxableProfit.toFixed(2)}
                    </span>
                </strong>
                <strong>Ödenecek Vergi (%${vergiOrani * 100}) (TL): 
                    <span style="color: #dc3545">
                        ${(totalTaxableProfit * vergiOrani).toFixed(2)}
                    </span>
                </strong>
                <strong>Vergi Sonrası Toplam Kazanç (TL): 
                    <span class="${(totalTaxableProfit * (1 - vergiOrani)) >= 0 ? 'positive-value' : 'negative-value'}">
                        ${(totalTaxableProfit * (1 - vergiOrani)).toFixed(2)}
                    </span>
                </strong>
            `;
        }
    }
});

function downloadCSV() {
    const table = document.querySelector('table');
    let csv = [];
    
    // Başlıkları al
    const headers = [];
    table.querySelectorAll('tr:nth-child(2) th').forEach(header => {
        headers.push(header.textContent);
    });
    csv.push(headers.join(','));
    
    // Verileri al
    table.querySelectorAll('tbody tr').forEach(row => {
        const rowData = [];
        row.querySelectorAll('td').forEach((cell, index) => {
            // Adet kolonu için data-value kullan
            let value;
            if (index === 7) { // Adet kolonu
                value = cell.getAttribute('data-value') || cell.textContent;
            } else {
                value = cell.textContent;
            }
            
            // Virgülleri ve tırnak işaretlerini kontrol et
            value = value.replace(/"/g, '""');
            if (value.includes(',')) {
                value = `"${value}"`;
            }
            rowData.push(value);
        });
        csv.push(rowData.join(','));
    });
    
    // CSV dosyasını oluştur ve indir
    const csvContent = csv.join('\n');
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    const vergiDonemi = document.getElementById('vergiDonemi').value;
    
    link.href = URL.createObjectURL(blob);
    link.download = `usd_bazli_yatirim_islemleri_${vergiDonemi}.csv`;
    link.click();
}

function downloadExcel() {
    const table = document.querySelector('table');
    const vergiDonemi = document.getElementById('vergiDonemi').value;
    const wb = XLSX.utils.book_new();
    
    // Tabloyu işle ve Adet kolonunu data-value'dan al
    const rows = [];
    const headerRow = Array.from(table.querySelectorAll('tr:nth-child(2) th')).map(th => th.textContent);
    rows.push(headerRow);
    
    table.querySelectorAll('tbody tr').forEach(tr => {
        const row = Array.from(tr.querySelectorAll('td')).map((td, index) => {
            if (index === 7) { // Adet kolonu
                return td.getAttribute('data-value') || td.textContent;
            }
            return td.textContent;
        });
        rows.push(row);
    });
    
    const ws = XLSX.utils.aoa_to_sheet(rows);
    
    // Excel dosyasını oluştur
    XLSX.utils.book_append_sheet(wb, ws, 'USD Bazlı Yatırım İşlemleri');
    
    // İndir
    XLSX.writeFile(wb, `usd_bazli_yatirim_islemleri_${vergiDonemi}.xlsx`);
}

document.addEventListener('DOMContentLoaded', function() {
    if (SHOW_BUY_ME_COFFEE) {
        const coffeeButton = document.getElementById('coffeeButton');
        if (coffeeButton) {
            coffeeButton.style.display = 'flex';
        }
    }

    // Download butonlarını başlangıçta gizle
    const downloadButtons = document.querySelectorAll('.download-button');
    downloadButtons.forEach(button => {
        button.style.display = 'none';
    });
});

function showError(message, showMail = true) {
    const container = document.getElementById('tableContainer');
    container.innerHTML = `
        <div class="error-message" style="color: #dc3545; padding: 20px; text-align: center; border: 1px solid #dc3545; border-radius: 4px; margin: 20px 0;">
            <p>😟 ${message}</p>
            ${showMail ? '<p>Sorunuz varsa <a href="https://x.com/@CodeOnBrew">x.com/@CodeOnBrew</a> adresine ulaşabilirsiniz.</p>' : ''}
        </div>
    `;
}

// Global FifoCalculator örneği
let calculator = new FifoCalculator();
